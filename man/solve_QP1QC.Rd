% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qp1qc_solver.R
\name{solve_QP1QC}
\alias{solve_QP1QC}
\title{Solve (non-convex) quadratic program with 1 quadratic constraint}
\usage{
solve_QP1QC(A_mat, a_vec, B_mat, b_vec, k, tol = 10^-7,
  eigen_B_mat = NULL, eigen_A_mat = NULL, verbose = TRUE)
}
\arguments{
\item{A_mat}{see details below}

\item{a_vec}{see details below}

\item{B_mat}{see details below}

\item{b_vec}{see details below}

\item{k}{see details below}

\item{tol}{a calculation tolerance variable used at several points in the algorithm.}

\item{eigen_B_mat}{(optional) the precalculated result \code{eigen(B_mat)}.}

\item{eigen_A_mat}{(optional) the precalculated result \code{eigen(A_mat)}.}

\item{verbose}{show progress from calculation}
}
\value{
a list with elements
\itemize{
\item{soln}{ - the solution for x}
\item{constraint}{ - the value of the constraint function at the solution}
\item{objective}{ - the value of the objective function at the solution}
}
}
\description{
Solves a possibly non-convex quadratic program with 1 quadratic constraint. Either \code{A_mat} or \code{B_mat} must be positive definite, but not necessarily both (see Details, below).
}
\details{
Solves a minimization problem of the form:

\deqn{ 	min_{x} x^T A_mat x + a_vec^T x }
\deqn{ such that x^T B_mat x + b_vec^T x + k \leq 0,}

where either \code{A_mat} or \code{B_mat} must be positive definite, but not necessarily both.
}
